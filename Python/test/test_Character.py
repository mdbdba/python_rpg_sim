import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
from PlayerCharacter import PlayerCharacter    # NOQA
from InvokePSQL import InvokePSQL    # NOQA
from CommonFunctions import arrayToString, stringToArray    # NOQA
from CommonFunctions import compareArrays    # NOQA


def test_Character_Default():
    db = InvokePSQL()
    a1 = PlayerCharacter(db)
    assert(a1)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())
    assert(a1.blinded_ind is False)
    assert(a1.charmed_ind is False)
    assert(a1.deafend_ind is False)
    assert(a1.fatigued_ind is False)
    assert(a1.frightened_ind is False)
    assert(a1.grappled_ind is False)
    assert(a1.incapacitated_ind is False)
    assert(a1.invisible_ind is False)
    assert(a1.paralyzed_ind is False)
    assert(a1.petrified_ind is False)
    assert(a1.poisoned_ind is False)
    assert(a1.prone_ind is False)
    assert(a1.stunned_ind is False)
    assert(a1.unconcious_ind is False)
    assert(a1.exhaustion_level == 0)
    assert(a1.cur_movement > 10)


def test_Character_Strict():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, abilityArrayStr="Strict")
    assert(a1)
    assert(a1.ability_base_array)


def test_Race_Standard_Array():
    db = InvokePSQL()
#    compArray = [15, 14, 13, 12, 10, 8]
    found15 = False
    found14 = False
    found13 = False
    found12 = False
    found10 = False
    found8 = False

    a1 = PlayerCharacter(db, abilityArrayStr="Standard")
    assert(a1)
    for i in range(0, 6):
        if a1.ability_base_array[i] == 15:
            found15 = True
        elif a1.ability_base_array[i] == 14:
            found14 = True
        elif a1.ability_base_array[i] == 13:
            found13 = True
        elif a1.ability_base_array[i] == 12:
            found12 = True
        elif a1.ability_base_array[i] == 10:
            found10 = True
        elif a1.ability_base_array[i] == 8:
            found8 = True

    assert(found15)
    assert(found14)
    assert(found13)
    assert(found12)
    assert(found10)
    assert(found8)
    # assert(compArray[i] == a1.ability_base_array[i])


def test_Character_Dwarf_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db,
                         raceCandidate="Mountain dwarf",
                         classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())
    assert(a1.melee_weapon_obj.name == 'Greataxe')
    assert(a1.ranged_weapon_obj.name == 'Javelin')


def test_Character_Halfling_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db,
                         raceCandidate="Stout halfling",
                         classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Stout halfling")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())
    assert(a1.melee_weapon_obj.name == 'Rapier')


def test_RandomGen_Retrieve():
    db = InvokePSQL()
    a1 = PlayerCharacter(db)
    b1 = PlayerCharacter(db, characterId=a1.character_id)
    assert(a1)
    assert(b1)
    assert(a1.level == b1.level)
    assert(a1.getRace() == b1.getRace())
    assert(a1.getClass() == b1.getClass())
    assert(a1.getGender() == b1.getGender())
    assert(a1.TTA == b1.TTA)
    assert(a1.getName() == b1.getName())
    assert(a1.armor_class == b1.armor_class)

    assert(compareArrays(a1.ability_base_array, b1.ability_base_array))
    assert(compareArrays(a1.ability_array, b1.ability_array))
    assert(compareArrays(a1.ability_modifier_array, b1.ability_modifier_array))
    assert(compareArrays(a1.ability_array_obj.ability_label_array,
                         b1.ability_array_obj.ability_label_array))

    assert(a1.hit_points == b1.hit_points)
    assert(a1.temp_hit_points == b1.temp_hit_points)
    assert(a1.cur_hit_points == b1.cur_hit_points)
    assert(a1.getHeight() == b1.getHeight())
    assert(a1.getWeight() == b1.getWeight())
    assert(a1.getAlignmentStr() == b1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev() == b1.getAlignmentAbbrev())
    assert(a1.getSkinTone() == b1.getSkinTone())
    assert(a1.getHairColor() == b1.getHairColor())
    assert(a1.getHairType() == b1.getHairType())
    assert(a1.getEyeColor() == b1.getEyeColor())


def test_Character_Poison_Resistance():
    db = InvokePSQL()
    a1 = PlayerCharacter(db,
                         raceCandidate="Mountain Dwarf",
                         classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.damage_adj['Poison'] == 'resistant')
    a1.Damage(6, 'Poison')
    assert(a1.cur_hit_points == (a1.hit_points - 3))


def test_Character_Death():
    db = InvokePSQL()
    a1 = PlayerCharacter(db,
                         abilityArrayStr="18,12,12,10,10,8",
                         raceCandidate="Mountain Dwarf",
                         classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    a1.meleeDefend(modifier=13, possibleDamage=a1.hit_points,
                   damageType='Bludgeoning')

    assert(a1.alive is True)
    assert(a1.stabilized is False)
    a1.Heal(10)
    assert(a1.cur_hit_points == 10)
    assert(a1.alive is True)
    assert(a1.stabilized is True)
    a1.meleeDefend(modifier=13, possibleDamage=(2 * a1.hit_points),
                   damageType='Bludgeoning')
    assert(a1.alive is False)


def test_Character_Checks():
    db = InvokePSQL()
    a1 = PlayerCharacter(db,
                         abilityArrayStr="18,12,12,10,10,8",
                         raceCandidate="Mountain Dwarf",
                         classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Barbarian")
    assert(a1.finesse_ability_mod == 'Strength')
    assert(a1.classObj.hit_die == 12)
    res = a1.Check('Strength', 'Normal', 5)
    assert(res is True or res is False)
    res = a1.Check('Strength', 'Advantage', 15)
    assert(res is True or res is False)
    res = a1.Check('Strength', 'Disadvantage', 10)

    assert(res is True or res is False)
    res = a1.Check('Dexterity', 'Normal', 5)
    assert(res is True or res is False)
    res = a1.Check('Dexterity', 'Advantage', 15)
    assert(res is True or res is False)
    res = a1.Check('Dexterity', 'Disadvantage', 10)

    assert(res is True or res is False)
    res = a1.Check('Constitution', 'Normal', 5)
    assert(res is True or res is False)
    res = a1.Check('Constitution', 'Advantage', 15)
    assert(res is True or res is False)
    res = a1.Check('Constitution', 'Disadvantage', 10)

    assert(res is True or res is False)
    res = a1.Check('Intelligence', 'Normal', 5)
    assert(res is True or res is False)
    res = a1.Check('Intelligence', 'Advantage', 15)
    assert(res is True or res is False)
    res = a1.Check('Intelligence', 'Disadvantage', 10)

    assert(res is True or res is False)
    res = a1.Check('Wisdom', 'Normal', 5)
    assert(res is True or res is False)
    res = a1.Check('Wisdom', 'Advantage', 15)
    assert(res is True or res is False)
    res = a1.Check('Wisdom', 'Disadvantage', 10)

    assert(res is True or res is False)
    res = a1.Check('Charisma', 'Normal', 5)
    assert(res is True or res is False)
    res = a1.Check('Charisma', 'Advantage', 15)
    assert(res is True or res is False)
    res = a1.Check('Charisma', 'Disadvantage', 10)

    assert(res is True or res is False)
    res = a1.Check('Athletics', 'Normal', 5)
    assert(res is True or res is False)
    res = a1.Check('Athletics', 'Advantage', 15)
    assert(res is True or res is False)
    res = a1.Check('Athletics', 'Disadvantage', 10)

def test_Character_Hilldwarf_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Hill dwarf", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Hill dwarf")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())


def test_Character_Highelf_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="High elf", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "High elf")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Woodelf_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Wood elf", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Wood elf")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Lightfoothalfling_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Lightfoot halfling", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Lightfoot halfling")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Stouthalfling_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Stout halfling", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Stout halfling")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfElf_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Elf", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Half-Elf")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Human_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Human", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Human")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackdragonborn_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black dragonborn", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Black dragonborn")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bluedragonborn_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Blue dragonborn", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Blue dragonborn")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brassdragonborn_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brass dragonborn", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Brass dragonborn")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bronzedragonborn_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Bronze dragonborn", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Bronze dragonborn")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Copperdragonborn_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Copper dragonborn", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Copper dragonborn")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Golddragonborn_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gold dragonborn", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Gold dragonborn")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greendragonborn_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Green dragonborn", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Green dragonborn")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Reddragonborn_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Red dragonborn", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Red dragonborn")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Silverdragonborn_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Silver dragonborn", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Silver dragonborn")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Whitedragonborn_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="White dragonborn", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "White dragonborn")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Rockgnome_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Rock gnome", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Rock gnome")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfOrc_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Orc", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Half-Orc")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Tiefling_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Tiefling", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Tiefling")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Centaur_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Centaur", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Centaur")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackbearkin_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black bearkin", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Black bearkin")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brownbearkin_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brown bearkin", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Brown bearkin")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Koalabearkin_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Koala bearkin", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Koala bearkin")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Pandabearkin_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Panda bearkin", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Panda bearkin")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Polarbearkin_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Polar bearkin", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Polar bearkin")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Burrowskobold_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Burrows kobold", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Burrows kobold")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Loredrakekobold_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Loredrake kobold", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Loredrake kobold")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Wingedkobold_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Winged kobold", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Winged kobold")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greenskingoblin_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Greenskin goblin", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Greenskin goblin")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Boggartgoblin_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Boggart goblin", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Boggart goblin")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Gremlingoblin_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gremlin goblin", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Gremlin goblin")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Dryad_Barbarian():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Dryad", classCandidate="Barbarian")
    assert(a1)
    assert(a1.getRace() == "Dryad")
    assert(a1.getClass() == "Barbarian")
    assert(a1.classObj.hit_die == 12)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Hilldwarf_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Hill dwarf", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Hill dwarf")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Highelf_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="High elf", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "High elf")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Mountaindwarf_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Mountain dwarf", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Woodelf_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Wood elf", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Wood elf")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Lightfoothalfling_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Lightfoot halfling", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Lightfoot halfling")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())


def test_Character_HalfElf_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Elf", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Half-Elf")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Human_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Human", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Human")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackdragonborn_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black dragonborn", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Black dragonborn")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bluedragonborn_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Blue dragonborn", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Blue dragonborn")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brassdragonborn_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brass dragonborn", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Brass dragonborn")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bronzedragonborn_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Bronze dragonborn", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Bronze dragonborn")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Copperdragonborn_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Copper dragonborn", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Copper dragonborn")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Golddragonborn_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gold dragonborn", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Gold dragonborn")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greendragonborn_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Green dragonborn", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Green dragonborn")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Reddragonborn_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Red dragonborn", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Red dragonborn")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Silverdragonborn_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Silver dragonborn", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Silver dragonborn")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Whitedragonborn_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="White dragonborn", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "White dragonborn")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Rockgnome_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Rock gnome", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Rock gnome")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfOrc_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Orc", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Half-Orc")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Tiefling_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Tiefling", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Tiefling")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Centaur_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Centaur", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Centaur")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackbearkin_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black bearkin", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Black bearkin")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brownbearkin_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brown bearkin", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Brown bearkin")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Koalabearkin_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Koala bearkin", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Koala bearkin")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Pandabearkin_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Panda bearkin", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Panda bearkin")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Polarbearkin_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Polar bearkin", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Polar bearkin")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Burrowskobold_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Burrows kobold", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Burrows kobold")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Loredrakekobold_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Loredrake kobold", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Loredrake kobold")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Wingedkobold_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Winged kobold", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Winged kobold")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greenskingoblin_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Greenskin goblin", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Greenskin goblin")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Boggartgoblin_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Boggart goblin", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Boggart goblin")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Gremlingoblin_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gremlin goblin", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Gremlin goblin")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Dryad_Bard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Dryad", classCandidate="Bard")
    assert(a1)
    assert(a1.getRace() == "Dryad")
    assert(a1.getClass() == "Bard")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Hilldwarf_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Hill dwarf", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Hill dwarf")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Highelf_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="High elf", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "High elf")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Mountaindwarf_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Mountain dwarf", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Woodelf_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Wood elf", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Wood elf")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Lightfoothalfling_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Lightfoot halfling", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Lightfoot halfling")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Stouthalfling_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Stout halfling", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Stout halfling")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfElf_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Elf", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Half-Elf")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Human_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Human", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Human")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackdragonborn_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black dragonborn", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Black dragonborn")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bluedragonborn_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Blue dragonborn", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Blue dragonborn")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brassdragonborn_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brass dragonborn", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Brass dragonborn")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bronzedragonborn_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Bronze dragonborn", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Bronze dragonborn")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Copperdragonborn_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Copper dragonborn", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Copper dragonborn")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Golddragonborn_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gold dragonborn", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Gold dragonborn")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greendragonborn_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Green dragonborn", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Green dragonborn")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Reddragonborn_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Red dragonborn", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Red dragonborn")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Silverdragonborn_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Silver dragonborn", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Silver dragonborn")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Whitedragonborn_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="White dragonborn", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "White dragonborn")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Rockgnome_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Rock gnome", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Rock gnome")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfOrc_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Orc", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Half-Orc")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Tiefling_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Tiefling", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Tiefling")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Centaur_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Centaur", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Centaur")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackbearkin_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black bearkin", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Black bearkin")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brownbearkin_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brown bearkin", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Brown bearkin")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Koalabearkin_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Koala bearkin", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Koala bearkin")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Pandabearkin_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Panda bearkin", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Panda bearkin")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Polarbearkin_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Polar bearkin", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Polar bearkin")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Burrowskobold_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Burrows kobold", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Burrows kobold")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Loredrakekobold_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Loredrake kobold", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Loredrake kobold")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Wingedkobold_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Winged kobold", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Winged kobold")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greenskingoblin_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Greenskin goblin", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Greenskin goblin")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Boggartgoblin_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Boggart goblin", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Boggart goblin")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Gremlingoblin_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gremlin goblin", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Gremlin goblin")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Dryad_Cleric():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Dryad", classCandidate="Cleric")
    assert(a1)
    assert(a1.getRace() == "Dryad")
    assert(a1.getClass() == "Cleric")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Hilldwarf_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Hill dwarf", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Hill dwarf")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Highelf_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="High elf", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "High elf")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Mountaindwarf_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Mountain dwarf", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Woodelf_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Wood elf", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Wood elf")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Lightfoothalfling_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Lightfoot halfling", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Lightfoot halfling")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Stouthalfling_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Stout halfling", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Stout halfling")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfElf_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Elf", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Half-Elf")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Human_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Human", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Human")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackdragonborn_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black dragonborn", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Black dragonborn")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bluedragonborn_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Blue dragonborn", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Blue dragonborn")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brassdragonborn_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brass dragonborn", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Brass dragonborn")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bronzedragonborn_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Bronze dragonborn", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Bronze dragonborn")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Copperdragonborn_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Copper dragonborn", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Copper dragonborn")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Golddragonborn_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gold dragonborn", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Gold dragonborn")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greendragonborn_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Green dragonborn", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Green dragonborn")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Reddragonborn_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Red dragonborn", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Red dragonborn")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Silverdragonborn_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Silver dragonborn", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Silver dragonborn")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Whitedragonborn_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="White dragonborn", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "White dragonborn")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Rockgnome_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Rock gnome", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Rock gnome")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfOrc_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Orc", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Half-Orc")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Tiefling_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Tiefling", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Tiefling")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Centaur_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Centaur", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Centaur")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackbearkin_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black bearkin", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Black bearkin")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brownbearkin_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brown bearkin", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Brown bearkin")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Koalabearkin_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Koala bearkin", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Koala bearkin")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Pandabearkin_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Panda bearkin", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Panda bearkin")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Polarbearkin_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Polar bearkin", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Polar bearkin")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Burrowskobold_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Burrows kobold", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Burrows kobold")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Loredrakekobold_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Loredrake kobold", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Loredrake kobold")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Wingedkobold_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Winged kobold", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Winged kobold")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greenskingoblin_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Greenskin goblin", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Greenskin goblin")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Boggartgoblin_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Boggart goblin", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Boggart goblin")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Gremlingoblin_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gremlin goblin", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Gremlin goblin")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Dryad_Druid():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Dryad", classCandidate="Druid")
    assert(a1)
    assert(a1.getRace() == "Dryad")
    assert(a1.getClass() == "Druid")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Hilldwarf_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Hill dwarf", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Hill dwarf")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Highelf_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="High elf", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "High elf")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Mountaindwarf_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Mountain dwarf", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Woodelf_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Wood elf", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Wood elf")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Lightfoothalfling_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Lightfoot halfling", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Lightfoot halfling")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Stouthalfling_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Stout halfling", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Stout halfling")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfElf_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Elf", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Half-Elf")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Human_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Human", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Human")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackdragonborn_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black dragonborn", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Black dragonborn")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bluedragonborn_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Blue dragonborn", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Blue dragonborn")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brassdragonborn_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brass dragonborn", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Brass dragonborn")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bronzedragonborn_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Bronze dragonborn", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Bronze dragonborn")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Copperdragonborn_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Copper dragonborn", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Copper dragonborn")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Golddragonborn_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gold dragonborn", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Gold dragonborn")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greendragonborn_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Green dragonborn", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Green dragonborn")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Reddragonborn_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Red dragonborn", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Red dragonborn")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Silverdragonborn_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Silver dragonborn", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Silver dragonborn")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Whitedragonborn_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="White dragonborn", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "White dragonborn")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Rockgnome_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Rock gnome", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Rock gnome")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfOrc_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Orc", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Half-Orc")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Tiefling_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Tiefling", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Tiefling")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Centaur_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Centaur", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Centaur")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackbearkin_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black bearkin", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Black bearkin")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brownbearkin_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brown bearkin", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Brown bearkin")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Koalabearkin_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Koala bearkin", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Koala bearkin")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Pandabearkin_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Panda bearkin", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Panda bearkin")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Polarbearkin_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Polar bearkin", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Polar bearkin")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Burrowskobold_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Burrows kobold", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Burrows kobold")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Loredrakekobold_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Loredrake kobold", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Loredrake kobold")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Wingedkobold_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Winged kobold", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Winged kobold")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greenskingoblin_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Greenskin goblin", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Greenskin goblin")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Boggartgoblin_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Boggart goblin", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Boggart goblin")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Gremlingoblin_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gremlin goblin", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Gremlin goblin")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Dryad_Fighter():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Dryad", classCandidate="Fighter")
    assert(a1)
    assert(a1.getRace() == "Dryad")
    assert(a1.getClass() == "Fighter")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Hilldwarf_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Hill dwarf", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Hill dwarf")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Highelf_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="High elf", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "High elf")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Mountaindwarf_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Mountain dwarf", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Woodelf_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Wood elf", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Wood elf")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Lightfoothalfling_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Lightfoot halfling", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Lightfoot halfling")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Stouthalfling_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Stout halfling", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Stout halfling")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfElf_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Elf", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Half-Elf")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Human_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Human", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Human")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackdragonborn_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black dragonborn", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Black dragonborn")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bluedragonborn_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Blue dragonborn", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Blue dragonborn")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brassdragonborn_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brass dragonborn", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Brass dragonborn")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bronzedragonborn_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Bronze dragonborn", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Bronze dragonborn")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Copperdragonborn_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Copper dragonborn", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Copper dragonborn")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Golddragonborn_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gold dragonborn", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Gold dragonborn")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greendragonborn_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Green dragonborn", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Green dragonborn")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Reddragonborn_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Red dragonborn", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Red dragonborn")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Silverdragonborn_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Silver dragonborn", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Silver dragonborn")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Whitedragonborn_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="White dragonborn", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "White dragonborn")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Rockgnome_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Rock gnome", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Rock gnome")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfOrc_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Orc", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Half-Orc")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Tiefling_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Tiefling", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Tiefling")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Centaur_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Centaur", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Centaur")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackbearkin_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black bearkin", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Black bearkin")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brownbearkin_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brown bearkin", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Brown bearkin")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Koalabearkin_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Koala bearkin", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Koala bearkin")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Pandabearkin_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Panda bearkin", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Panda bearkin")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Polarbearkin_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Polar bearkin", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Polar bearkin")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Burrowskobold_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Burrows kobold", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Burrows kobold")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Loredrakekobold_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Loredrake kobold", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Loredrake kobold")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Wingedkobold_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Winged kobold", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Winged kobold")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greenskingoblin_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Greenskin goblin", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Greenskin goblin")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Boggartgoblin_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Boggart goblin", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Boggart goblin")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Gremlingoblin_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gremlin goblin", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Gremlin goblin")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Dryad_Monk():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Dryad", classCandidate="Monk")
    assert(a1)
    assert(a1.getRace() == "Dryad")
    assert(a1.getClass() == "Monk")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Hilldwarf_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Hill dwarf", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Hill dwarf")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Highelf_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="High elf", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "High elf")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Mountaindwarf_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Mountain dwarf", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Woodelf_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Wood elf", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Wood elf")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Lightfoothalfling_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Lightfoot halfling", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Lightfoot halfling")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Stouthalfling_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Stout halfling", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Stout halfling")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfElf_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Elf", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Half-Elf")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Human_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Human", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Human")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackdragonborn_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black dragonborn", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Black dragonborn")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bluedragonborn_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Blue dragonborn", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Blue dragonborn")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brassdragonborn_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brass dragonborn", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Brass dragonborn")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bronzedragonborn_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Bronze dragonborn", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Bronze dragonborn")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Copperdragonborn_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Copper dragonborn", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Copper dragonborn")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Golddragonborn_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gold dragonborn", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Gold dragonborn")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greendragonborn_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Green dragonborn", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Green dragonborn")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Reddragonborn_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Red dragonborn", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Red dragonborn")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Silverdragonborn_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Silver dragonborn", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Silver dragonborn")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Whitedragonborn_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="White dragonborn", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "White dragonborn")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Rockgnome_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Rock gnome", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Rock gnome")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfOrc_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Orc", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Half-Orc")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Tiefling_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Tiefling", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Tiefling")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Centaur_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Centaur", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Centaur")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackbearkin_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black bearkin", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Black bearkin")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brownbearkin_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brown bearkin", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Brown bearkin")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Koalabearkin_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Koala bearkin", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Koala bearkin")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Pandabearkin_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Panda bearkin", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Panda bearkin")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Polarbearkin_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Polar bearkin", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Polar bearkin")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Burrowskobold_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Burrows kobold", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Burrows kobold")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Loredrakekobold_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Loredrake kobold", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Loredrake kobold")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Wingedkobold_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Winged kobold", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Winged kobold")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greenskingoblin_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Greenskin goblin", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Greenskin goblin")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Boggartgoblin_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Boggart goblin", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Boggart goblin")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Gremlingoblin_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gremlin goblin", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Gremlin goblin")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Dryad_Paladin():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Dryad", classCandidate="Paladin")
    assert(a1)
    assert(a1.getRace() == "Dryad")
    assert(a1.getClass() == "Paladin")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Hilldwarf_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Hill dwarf", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Hill dwarf")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Highelf_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="High elf", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "High elf")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Mountaindwarf_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Mountain dwarf", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Woodelf_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Wood elf", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Wood elf")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Lightfoothalfling_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Lightfoot halfling", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Lightfoot halfling")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Stouthalfling_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Stout halfling", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Stout halfling")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfElf_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Elf", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Half-Elf")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Human_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Human", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Human")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackdragonborn_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black dragonborn", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Black dragonborn")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bluedragonborn_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Blue dragonborn", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Blue dragonborn")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brassdragonborn_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brass dragonborn", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Brass dragonborn")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bronzedragonborn_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Bronze dragonborn", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Bronze dragonborn")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Copperdragonborn_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Copper dragonborn", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Copper dragonborn")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Golddragonborn_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gold dragonborn", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Gold dragonborn")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greendragonborn_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Green dragonborn", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Green dragonborn")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Reddragonborn_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Red dragonborn", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Red dragonborn")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Silverdragonborn_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Silver dragonborn", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Silver dragonborn")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Whitedragonborn_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="White dragonborn", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "White dragonborn")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Rockgnome_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Rock gnome", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Rock gnome")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfOrc_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Orc", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Half-Orc")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Tiefling_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Tiefling", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Tiefling")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Centaur_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Centaur", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Centaur")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackbearkin_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black bearkin", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Black bearkin")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brownbearkin_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brown bearkin", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Brown bearkin")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Koalabearkin_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Koala bearkin", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Koala bearkin")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Pandabearkin_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Panda bearkin", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Panda bearkin")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Polarbearkin_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Polar bearkin", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Polar bearkin")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Burrowskobold_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Burrows kobold", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Burrows kobold")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Loredrakekobold_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Loredrake kobold", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Loredrake kobold")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Wingedkobold_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Winged kobold", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Winged kobold")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greenskingoblin_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Greenskin goblin", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Greenskin goblin")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Boggartgoblin_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Boggart goblin", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Boggart goblin")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Gremlingoblin_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gremlin goblin", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Gremlin goblin")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Dryad_Ranger():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Dryad", classCandidate="Ranger")
    assert(a1)
    assert(a1.getRace() == "Dryad")
    assert(a1.getClass() == "Ranger")
    assert(a1.classObj.hit_die == 10)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Hilldwarf_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Hill dwarf", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Hill dwarf")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Highelf_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="High elf", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "High elf")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Mountaindwarf_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Mountain dwarf", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Woodelf_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Wood elf", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Wood elf")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Lightfoothalfling_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Lightfoot halfling", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Lightfoot halfling")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Stouthalfling_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Stout halfling", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Stout halfling")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfElf_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Elf", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Half-Elf")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Human_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Human", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Human")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackdragonborn_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black dragonborn", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Black dragonborn")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bluedragonborn_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Blue dragonborn", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Blue dragonborn")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brassdragonborn_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brass dragonborn", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Brass dragonborn")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bronzedragonborn_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Bronze dragonborn", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Bronze dragonborn")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Copperdragonborn_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Copper dragonborn", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Copper dragonborn")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Golddragonborn_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gold dragonborn", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Gold dragonborn")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greendragonborn_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Green dragonborn", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Green dragonborn")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Reddragonborn_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Red dragonborn", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Red dragonborn")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Silverdragonborn_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Silver dragonborn", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Silver dragonborn")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Whitedragonborn_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="White dragonborn", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "White dragonborn")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Rockgnome_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Rock gnome", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Rock gnome")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfOrc_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Orc", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Half-Orc")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Tiefling_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Tiefling", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Tiefling")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Centaur_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Centaur", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Centaur")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackbearkin_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black bearkin", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Black bearkin")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brownbearkin_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brown bearkin", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Brown bearkin")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Koalabearkin_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Koala bearkin", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Koala bearkin")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Pandabearkin_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Panda bearkin", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Panda bearkin")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Polarbearkin_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Polar bearkin", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Polar bearkin")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Burrowskobold_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Burrows kobold", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Burrows kobold")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Loredrakekobold_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Loredrake kobold", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Loredrake kobold")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Wingedkobold_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Winged kobold", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Winged kobold")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greenskingoblin_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Greenskin goblin", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Greenskin goblin")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Boggartgoblin_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Boggart goblin", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Boggart goblin")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Gremlingoblin_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gremlin goblin", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Gremlin goblin")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Dryad_Rogue():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Dryad", classCandidate="Rogue")
    assert(a1)
    assert(a1.getRace() == "Dryad")
    assert(a1.getClass() == "Rogue")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Hilldwarf_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Hill dwarf", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Hill dwarf")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Highelf_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="High elf", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "High elf")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Mountaindwarf_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Mountain dwarf", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Woodelf_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Wood elf", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Wood elf")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Lightfoothalfling_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Lightfoot halfling", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Lightfoot halfling")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Stouthalfling_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Stout halfling", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Stout halfling")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfElf_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Elf", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Half-Elf")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Human_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Human", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Human")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackdragonborn_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black dragonborn", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Black dragonborn")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bluedragonborn_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Blue dragonborn", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Blue dragonborn")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brassdragonborn_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brass dragonborn", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Brass dragonborn")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bronzedragonborn_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Bronze dragonborn", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Bronze dragonborn")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Copperdragonborn_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Copper dragonborn", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Copper dragonborn")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Golddragonborn_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gold dragonborn", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Gold dragonborn")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greendragonborn_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Green dragonborn", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Green dragonborn")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Reddragonborn_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Red dragonborn", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Red dragonborn")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Silverdragonborn_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Silver dragonborn", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Silver dragonborn")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Whitedragonborn_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="White dragonborn", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "White dragonborn")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Rockgnome_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Rock gnome", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Rock gnome")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfOrc_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Orc", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Half-Orc")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Tiefling_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Tiefling", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Tiefling")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Centaur_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Centaur", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Centaur")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackbearkin_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black bearkin", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Black bearkin")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brownbearkin_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brown bearkin", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Brown bearkin")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Koalabearkin_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Koala bearkin", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Koala bearkin")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Pandabearkin_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Panda bearkin", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Panda bearkin")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Polarbearkin_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Polar bearkin", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Polar bearkin")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Burrowskobold_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Burrows kobold", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Burrows kobold")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Loredrakekobold_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Loredrake kobold", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Loredrake kobold")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Wingedkobold_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Winged kobold", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Winged kobold")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greenskingoblin_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Greenskin goblin", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Greenskin goblin")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Boggartgoblin_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Boggart goblin", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Boggart goblin")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Gremlingoblin_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gremlin goblin", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Gremlin goblin")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Dryad_Sorcerer():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Dryad", classCandidate="Sorcerer")
    assert(a1)
    assert(a1.getRace() == "Dryad")
    assert(a1.getClass() == "Sorcerer")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Hilldwarf_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Hill dwarf", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Hill dwarf")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Highelf_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="High elf", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "High elf")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Mountaindwarf_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Mountain dwarf", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Woodelf_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Wood elf", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Wood elf")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Lightfoothalfling_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Lightfoot halfling", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Lightfoot halfling")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Stouthalfling_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Stout halfling", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Stout halfling")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfElf_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Elf", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Half-Elf")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Human_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Human", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Human")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackdragonborn_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black dragonborn", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Black dragonborn")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bluedragonborn_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Blue dragonborn", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Blue dragonborn")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brassdragonborn_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brass dragonborn", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Brass dragonborn")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bronzedragonborn_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Bronze dragonborn", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Bronze dragonborn")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Copperdragonborn_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Copper dragonborn", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Copper dragonborn")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Golddragonborn_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gold dragonborn", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Gold dragonborn")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greendragonborn_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Green dragonborn", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Green dragonborn")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Reddragonborn_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Red dragonborn", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Red dragonborn")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Silverdragonborn_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Silver dragonborn", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Silver dragonborn")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Whitedragonborn_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="White dragonborn", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "White dragonborn")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Rockgnome_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Rock gnome", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Rock gnome")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfOrc_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Orc", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Half-Orc")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Tiefling_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Tiefling", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Tiefling")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Centaur_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Centaur", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Centaur")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackbearkin_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black bearkin", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Black bearkin")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brownbearkin_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brown bearkin", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Brown bearkin")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Koalabearkin_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Koala bearkin", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Koala bearkin")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Pandabearkin_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Panda bearkin", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Panda bearkin")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Polarbearkin_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Polar bearkin", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Polar bearkin")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Burrowskobold_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Burrows kobold", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Burrows kobold")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Loredrakekobold_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Loredrake kobold", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Loredrake kobold")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Wingedkobold_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Winged kobold", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Winged kobold")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greenskingoblin_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Greenskin goblin", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Greenskin goblin")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Boggartgoblin_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Boggart goblin", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Boggart goblin")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Gremlingoblin_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gremlin goblin", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Gremlin goblin")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Dryad_Warlock():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Dryad", classCandidate="Warlock")
    assert(a1)
    assert(a1.getRace() == "Dryad")
    assert(a1.getClass() == "Warlock")
    assert(a1.classObj.hit_die == 8)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Hilldwarf_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Hill dwarf", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Hill dwarf")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Highelf_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="High elf", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "High elf")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Mountaindwarf_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Mountain dwarf", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Mountain dwarf")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Woodelf_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Wood elf", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Wood elf")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Lightfoothalfling_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Lightfoot halfling", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Lightfoot halfling")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Stouthalfling_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Stout halfling", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Stout halfling")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfElf_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Elf", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Half-Elf")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Human_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Human", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Human")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackdragonborn_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black dragonborn", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Black dragonborn")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bluedragonborn_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Blue dragonborn", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Blue dragonborn")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brassdragonborn_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brass dragonborn", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Brass dragonborn")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Bronzedragonborn_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Bronze dragonborn", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Bronze dragonborn")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Copperdragonborn_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Copper dragonborn", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Copper dragonborn")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Golddragonborn_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gold dragonborn", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Gold dragonborn")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greendragonborn_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Green dragonborn", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Green dragonborn")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Reddragonborn_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Red dragonborn", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Red dragonborn")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Silverdragonborn_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Silver dragonborn", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Silver dragonborn")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Whitedragonborn_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="White dragonborn", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "White dragonborn")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Rockgnome_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Rock gnome", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Rock gnome")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_HalfOrc_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Half-Orc", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Half-Orc")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Tiefling_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Tiefling", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Tiefling")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Centaur_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Centaur", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Centaur")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Blackbearkin_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Black bearkin", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Black bearkin")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Brownbearkin_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Brown bearkin", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Brown bearkin")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Koalabearkin_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Koala bearkin", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Koala bearkin")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Pandabearkin_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Panda bearkin", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Panda bearkin")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Polarbearkin_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Polar bearkin", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Polar bearkin")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Burrowskobold_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Burrows kobold", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Burrows kobold")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Loredrakekobold_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Loredrake kobold", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Loredrake kobold")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Wingedkobold_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Winged kobold", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Winged kobold")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Greenskingoblin_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Greenskin goblin", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Greenskin goblin")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Boggartgoblin_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Boggart goblin", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Boggart goblin")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Gremlingoblin_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Gremlin goblin", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Gremlin goblin")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

def test_Character_Dryad_Wizard():
    db = InvokePSQL()
    a1 = PlayerCharacter(db, raceCandidate="Dryad", classCandidate="Wizard")
    assert(a1)
    assert(a1.getRace() == "Dryad")
    assert(a1.getClass() == "Wizard")
    assert(a1.classObj.hit_die == 6)
    assert(a1.getName())
    assert(a1.ability_base_array)
    assert(a1.level)
    assert(a1.getHeight())
    assert(a1.getWeight())
    assert(a1.getAlignmentStr())
    assert(a1.getAlignmentAbbrev())
    assert(a1.getSkinTone())
    assert(a1.getHairColor())
    assert(a1.getHairType())
    assert(a1.getEyeColor())

